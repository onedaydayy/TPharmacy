@page "/orders"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@implements IDisposable

<div class="container mt-5">
    <h1 class="header">Overview of TPharmacy Order's</h1>
    <h3>Welcome to the Order Home! </h3>
    <br />
    @if (Orders == null)
    {
        <div class="alert alert-info">Loading orders...</div>
    }
    else
    {
        <table class="table table-striped align-middle table-bordered responsive-table" id="ordersTable">
            <thead>

                <tr>
                    <th>ID</th>
                    <th>StaffID</th>
                    <th>DateTime</th>
                    <th>Price</th>
                    <th>CusID</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Orders)
                {
                    <tr>
                        <td>@order.ID</td>
                        <td>@order.StaffID</td>
                        <td>@order.OrderDateTime</td>
                        <td>@order.OrderPrice</td>
                        <td>@order.CusID</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<Order> Orders;

    protected async override Task OnInitializedAsync()
    {
        Orders = await _client.GetFromJsonAsync<List<Order>>($"{Endpoints.OrdersEndpoint}");
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#ordersTable");
    }

    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#ordersTable");
    }
}
