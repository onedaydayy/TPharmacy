@inject HttpClient _client
@using System.Security.Claims

<div class="container mt-5">
    <EditForm Model="@prescription" OnValidSubmit="@OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <fieldset disabled="@Disabled">
            <div class="form-group">
                <label>Consultant ID: </label>
                <div>
                    <InputSelect @bind-Value="@prescription.ConsultationID" class="form-control">
                        <option value="">-- Select Consultation --</option>
                        @if (Consultations != null)
                        {
                            foreach (var con in Consultations)
                            {
                                <option value="@con.ID">@con.Customer.CusName Consultation on @con.ConDate</option>
                            }
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="form-group">
                <label>Product</label>
                <div>
                    <InputSelect @bind-Value="@prescription.ProductID" class="form-control">
                        <option value="">-- Select Product --</option>
                        @if (products != null)
                        {
                            foreach (var pd in products)
                            {
                                <option value="@pd.ID">@pd.ProdName - @pd.ProdPrice </option>
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="@(()=>prescription.ProductID)" />
                </div>
            </div>
            <div class="form-group">
                <label>Quantity</label>
                <div>
                    <InputNumber @bind-Value="@prescription.PresQty" class="form-control" />
                    <ValidationMessage For="@(()=>prescription.PresQty)" />
                </div>
            </div>
        </fieldset>
        @if (!Disabled)
        {
            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>
        }
    </EditForm>
</div>

@code
{
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Prescription prescription { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public IList<Product> products { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> AuthTask { get; set; }

    private ClaimsPrincipal user;
    private List<Consultation> Consultations;

    protected async override Task OnInitializedAsync()
    {
        if (AuthTask == null)
        {
            return;
        }

        try
        {
            var authState = await AuthTask;
            this.user = authState.User;
        }
        catch (Exception ex)
        {
            // Handle exception
        }
        Consultations = await _client.GetFromJsonAsync<List<Consultation>>($"{Endpoints.ConsultationsEndpoint}");
        products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");

    }


}
