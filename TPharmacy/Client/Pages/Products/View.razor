@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TPharmacy.Shared
@inject NavigationManager _navManager
@inject HttpClient Http
@inject HttpClient _client
@inject IJSRuntime js
@page "/productview/{id:int}"

<div class="container mt-5">
    <EditForm Model="@orderitem" OnValidSubmit="CreateOrderItem">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h1>@product.ProdName- @product.ID</h1>
        <div class="container">
            <div class="row">
                <div class="col-sm-5 col-md-5 col-xl-5">
                    <div class="product-card-2 mt-5">
                        <div class="content-card">
                            <img src="img/@product.ProdName .jpeg" class="product-img" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-5 col-md-5 col-xl-5">
                    <br />
                    <br />
                    <div class="col-sm-4 col-md-4 col-xl-4">
                        <div class="d-inline float-right">
                            <div class="row view-margin">
                                <h2 class="price">@product.ProdPrice</h2>
                            </div>
                            <div class="row view-margin">
                                <div class="form-group">
                                    <label>Quantity </label>
                                    <div>
                                        <InputNumber @bind-Value="@orderitem.OrderItemQtny" class="form-control" Min=1 Max=10 />
                                        <ValidationMessage For="@(() => orderitem.OrderItemQtny)" />
                                    </div>
                                </div>
                                <h4>Free Shipping</h4>
                            </div>
                        </div>
                        <br />
                        <div class="row view-margin">
                            <button type="submit" class="btn btn-success btn-block">
                                <span class="oi oi-cart"></span>
                            </button>
                        </div>
                        <br /> <div class="content-text desc-zone">
                            @product.ProdDesc
                        </div>
                    </div>
                   
                </div>
            </div>
            </div>
    </EditForm>
</div>

@code {
    [Parameter] public int id { get; set; }
    Product product = new Product();
    OrderItem orderitem = new OrderItem();

    protected async override Task OnParametersSetAsync()
    {
        product = await _client.GetFromJsonAsync<Product>($"{Endpoints.ProductsEndpoint}/{id}");
    }

    private async Task CreateOrderItem()
    {
        orderitem.ProductID = product.ID;
        orderitem.OrderID = 1;
        await _client.PostAsJsonAsync(Endpoints.OrderItemsEndpoint, orderitem);
        _navManager.NavigateTo("/orderitems/");
    }
}


