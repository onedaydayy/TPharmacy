@page "/consultations/checkin/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager
@attribute [Authorize]
@using System.Security.Claims

<div class="container mt-5">
    <h1 class="header">Consultation</h1>
    <div class="row">
        <div class="col-3">
            <span>
                Consultation Check-In
            </span>
            <p> </p>
            <p>
                
                
                Hello @user.Identity.Name

                Welcome to your consultation
                The first 3 minute will be free of charge
                You’ll be charge by every 10 minute
                additional time will be round-up or round-down

                Every 10 Minute will be $9

            </p>
            <span>
                Duration
            </span>
            <hr />
            <span>
                @consultation.ConDuration Min
            </span>
        </div>
        <div class="col-9">
            @if (Prescriptions == null)
            {
            <div class="alert alert-info">No Prescriptions Given Yet</div>
            }
            else
            {
        <table class="table table-striped align-middle table-bordered responsive-table" id="prescriptionsTable">
            <thead>
                <tr>
                    <th>Product ID</th>
                    <th>Product Name</th>
                    <th>Pres Qty</th>
                </tr>
            </thead>

            @if (Prescriptions.Count == 0)
            {
                <tbody>
                    <tr >
                        <td colspan="3" class="alert alert-info">No Prescriptions Given Yet</td>
                    </tr>
                </tbody>
            }
            else
            {
            @foreach (var prescription in Prescriptions)
            {
            <tbody>
                <tr>
                    <td>@prescription.ProductID</td>
                    <td>@prescription.Product.ProdName</td>
                    <td>@prescription.PresQty</td>
                </tr>
            </tbody>
        }
            }


                </table>
            }
        </div>
    </div>
    <hr />
    <div class="row">
        <TPharmacy.Client.Components.BackToList Target="/consultations/cindex/" />
    </div>
</div>


@code {
    [Parameter] public int id { get; set; }
    Consultation consultation = new Consultation();
    private IList<Prescription> Prescriptions;

    [CascadingParameter]
    public Task<AuthenticationState> AuthTask { get; set; }

    private ClaimsPrincipal user;

    protected async override Task OnParametersSetAsync()
    {
        consultation = await _client.GetFromJsonAsync<Consultation>($"{Endpoints.ConsultationsEndpoint}/{id}");
        Prescriptions = await _client.GetFromJsonAsync<IList<Prescription>>($"{Endpoints.PrescriptionsEndpoint}/GetConstultationPrescriptions/{id}");        
    }



    protected async override Task OnInitializedAsync()
    {
        if (AuthTask == null)
        {
            return;
        }

        try
        {
            var authState = await AuthTask;
            this.user = authState.User;
        }
        catch (Exception ex)
        {
            // Handle exception
        }
    }
}
