@page "/consultations/cindex"
@inject HttpClient _client
@inject IJSRuntime js
@inject NavigationManager _navManager
@using System.Security.Claims

@attribute [Authorize]
@implements IDisposable

<div class="container mt-5">
    <button type="submit" class="btn btn-success btn-block">
        Add New Consultations
    </button>
    <br />
</div>

<div class="container mt-5">
    <h1 class="header">TPharmacy Consultations List</h1>
    <br />
    @if (Consultations == null)
    {
        <div class="alert alert-info">Loading Consultation...</div>
    }
    else
    {
        <table class="table table-striped align-middle table-bordered responsive-table" id="consultationsTable">
            <thead>
                <tr>
                    <th>Customer Name</th>
                    <th>ConID</th>
                    <th>StaffID</th>
                    <th>Date Time</th>
                    <th>Duration</th>
                    <th>Fee</th>
                    <th>Description</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var consultation in Consultations)
                {
                    <tr>
                        <td>@consultation.Customer.CusName</td>
                        <td>@consultation.ID</td>
                        <td>@consultation.StaffID</td>
                        <td>@consultation.ConDate</td>
                        <td>@consultation.ConDuration</td>
                        <td>@consultation.ConFee</td>
                        <td>@consultation.ConDesc</td>
                        <td>@consultation.ConStatus</td>
                        <td>
                            <a href="/consultations/cedit/@consultation.ID" class="btn btn-warning">
                                <span class="oi oi-pencil"></span>
                            </a>
                            <button class="btn btn-danger" @onclick="@(()=>Delete(consultation.ID))">
                                <span class="oi oi-delete"></span>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code





{
    private List<Consultation> Consultations;
    private List<Prescription> Prescriptions;
    private List<Customer> Customers;

    [Parameter] public string OnBacktoWhere { get; set; } = "/consultations/createsuccess";
    Consultation consultation = new Consultation();

    [CascadingParameter]
    public Task<AuthenticationState> AuthTask { get; set; }
    private ClaimsPrincipal user;

    protected async override Task OnInitializedAsync()
    {
        if (AuthTask == null)
        {
            return;
        }

        try
        {
            var authState = await AuthTask;
            this.user = authState.User;
        }
        catch (Exception ex)
        {
            // Handle exception
        }
        Consultations = await _client.GetFromJsonAsync<List<Consultation>>($"{Endpoints.ConsultationsEndpoint}/GetMyConsultation/" + user.Identity.Name);
        Prescriptions = await _client.GetFromJsonAsync<List<Prescription>>($"{Endpoints.PrescriptionsEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");

    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#consultationsTable");
    }

    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#consultationsTable");
    }

    async Task Delete(int consultationID)
    {
        var consultation = Consultations.First(q => q.ID == consultationID);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {consultation.ID} - Consultation with {consultation.Customer.CusName} on {consultation.ConDate}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.ConsultationsEndpoint}/{consultationID}");
            await OnInitializedAsync();
        }
    }
}
